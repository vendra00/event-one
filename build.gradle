plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.t1tanic'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

configurations {
    compileOnly { extendsFrom annotationProcessor }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web + JPA + Validation
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Security + JWT (resource server)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // OpenAPI / Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation 'org.apache.commons:commons-lang3:3.18.0'

    // DB + migrations
    runtimeOnly 'com.mysql:mysql-connector-j'      // keep MySQL for now
    implementation 'org.flywaydb:flyway-core:11.7.2'
    implementation 'org.flywaydb:flyway-mysql:11.7.2'

    // Dev ergonomics
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Lombok (optional)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Import Testcontainers BOM for aligned versions
dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.20.2"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
